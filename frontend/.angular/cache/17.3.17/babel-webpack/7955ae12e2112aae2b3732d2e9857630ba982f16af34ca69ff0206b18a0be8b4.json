{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { first } from \"rxjs/operators\";\nimport { MustMatch } from \"@app/_helpers\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_h1_0_h1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Edit Account\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_h1_0_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_h1_0_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, AddEditComponent_h1_0_div_18_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.title.errors.required);\n  }\n}\nfunction AddEditComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \" Create Account<0/h1> \");\n    i0.ɵɵtemplate(2, AddEditComponent_h1_0_h1_2_Template, 2, 0, \"h1\", 0);\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_h1_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 4);\n    i0.ɵɵelement(9, \"option\", 5);\n    i0.ɵɵelementStart(10, \"option\", 6);\n    i0.ɵɵtext(11, \"Mr\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 7);\n    i0.ɵɵtext(13, \"Mrs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 8);\n    i0.ɵɵtext(15, \"Miss\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 9);\n    i0.ɵɵtext(17, \"Ms\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, AddEditComponent_h1_0_div_18_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 11)(20, \"label\");\n    i0.ɵɵtext(21, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 12);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isAddMode);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.submitted && ctx_r1.f.title.errors));\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && ctx_r1.f.title.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r1.submitted && ctx_r1.f.firstName.errors));\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params[\"id\"];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        firstName: [\"\", Validators.required],\n        lastName: [\"\", Validators.required],\n        email: [\"\", [Validators.required, Validators.email]],\n        role: [\"\", Validators.required],\n        password: [\"\", [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\n        confirmPassword: [\"\"]\n      }, {\n        validator: MustMatch(\"password\", \"confirmPassword\")\n      });\n      if (!this.isAddMode) {\n        this.accountService.getById(this.id).pipe(first()).subscribe(x => this.form.patchValue(x));\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createAccount();\n      } else {\n        this.updateAccount();\n      }\n    }\n    createAccount() {\n      this.accountService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success(\"Account created Successfully\", {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate([\"../\"], {\n            relativeTo: this.route\n          });\n        },\n        error: err => {\n          this.alertService.error(err);\n          this.loading = false;\n        }\n      });\n    }\n    updateAccount() {\n      this.accountService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success(\"Update successful\", {\n            keepAfterRouteChange: true\n          });\n        },\n        error: err => {\n          this.alertService.error(err);\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function AddEditComponent_Factory(t) {\n        return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddEditComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 1,\n        vars: 1,\n        consts: [[4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-row\"], [1, \"from-group\", \"col\"], [\"formControlName\", \"title\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"fromControlName\", \"firstName\", \"placeholder\", \"First Name\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"]],\n        template: function AddEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, AddEditComponent_h1_0_Template, 23, 9, \"h1\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}